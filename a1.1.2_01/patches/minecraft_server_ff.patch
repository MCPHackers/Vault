diff -r -U 3 minecraft_server/net/minecraft/src/BlockFlowing.java minecraft_server_patched/net/minecraft/src/BlockFlowing.java
--- minecraft_server/net/minecraft/src/BlockFlowing.java	2021-10-16 15:47:04.489118200 -0400
+++ minecraft_server_patched/net/minecraft/src/BlockFlowing.java	2021-10-16 15:45:55.326855900 -0400
@@ -21,12 +21,12 @@
     public void updateTick(World paramdy, int paramInt1, int paramInt2, int paramInt3, Random paramRandom) {
         if (this.blockID != 10 && this.blockID != 11 || paramdy.getBlockId(paramInt1, paramInt2 - 1, paramInt3) <= 1) {
             int i = this.getFlowDecay(paramdy, paramInt1, paramInt2, paramInt3);
-            int j = true;
+            boolean j = true;
             int l;
             if (i > 0) {
                 int k = -100;
                 this.numAdjacentSources = 0;
-                int k = this.getSmallestFlowDecay(paramdy, paramInt1 - 1, paramInt2, paramInt3, k);
+                k = this.getSmallestFlowDecay(paramdy, paramInt1 - 1, paramInt2, paramInt3, k);
                 k = this.getSmallestFlowDecay(paramdy, paramInt1 + 1, paramInt2, paramInt3, k);
                 k = this.getSmallestFlowDecay(paramdy, paramInt1, paramInt2, paramInt3 - 1, k);
                 k = this.getSmallestFlowDecay(paramdy, paramInt1, paramInt2, paramInt3 + 1, k);
diff -r -U 3 minecraft_server/net/minecraft/src/ChunkProviderLoadOrGenerate.java minecraft_server_patched/net/minecraft/src/ChunkProviderLoadOrGenerate.java
--- minecraft_server/net/minecraft/src/ChunkProviderLoadOrGenerate.java	2021-10-16 15:47:04.846163200 -0400
+++ minecraft_server_patched/net/minecraft/src/ChunkProviderLoadOrGenerate.java	2021-10-16 15:43:51.856503800 -0400
@@ -115,13 +115,8 @@
 
     private void saveChunk(Chunk var1) {
         if (this.chunkLoader != null) {
-            try {
-                var1.lastSaveTime = this.worldObj.worldTime;
-                this.chunkLoader.saveChunk(this.worldObj, var1);
-            } catch (IOException var3) {
-                var3.printStackTrace();
-            }
-
+            var1.lastSaveTime = this.worldObj.worldTime;
+            this.chunkLoader.saveChunk(this.worldObj, var1);
         }
     }
 
diff -r -U 3 minecraft_server/net/minecraft/src/ChunkProviderServer.java minecraft_server_patched/net/minecraft/src/ChunkProviderServer.java
--- minecraft_server/net/minecraft/src/ChunkProviderServer.java	2021-10-16 15:47:04.851149100 -0400
+++ minecraft_server_patched/net/minecraft/src/ChunkProviderServer.java	2021-10-16 15:43:06.047534200 -0400
@@ -122,13 +122,8 @@
 
     private void saveChunk(Chunk var1) {
         if (this.serverChunkLoader != null) {
-            try {
-                var1.lastSaveTime = this.worldObj.worldTime;
-                this.serverChunkLoader.saveChunk(this.worldObj, var1);
-            } catch (IOException var3) {
-                var3.printStackTrace();
-            }
-
+            var1.lastSaveTime = this.worldObj.worldTime;
+            this.serverChunkLoader.saveChunk(this.worldObj, var1);
         }
     }
 
diff -r -U 3 minecraft_server/net/minecraft/src/EntityPlayerMP.java minecraft_server_patched/net/minecraft/src/EntityPlayerMP.java
--- minecraft_server/net/minecraft/src/EntityPlayerMP.java	2021-10-16 15:47:05.023199900 -0400
+++ minecraft_server_patched/net/minecraft/src/EntityPlayerMP.java	2021-10-16 15:43:30.164140000 -0400
@@ -74,7 +74,11 @@
 
                 for(int var10 = 0; var10 < var9.size(); ++var10) {
                     TileEntity var7 = (TileEntity)var9.get(var10);
-                    this.playerNetServerHandler.sendPacket(new Packet59ComplexEntity(var7.xCoord, var7.yCoord, var7.zCoord, var7));
+                    try {
+                        this.playerNetServerHandler.sendPacket(new Packet59ComplexEntity(var7.xCoord, var7.yCoord, var7.zCoord, var7));
+                    } catch (Exception ex) {
+                        ex.printStackTrace();
+                    }
                 }
             }
         }
diff -r -U 3 minecraft_server/net/minecraft/src/NetLoginHandler.java minecraft_server_patched/net/minecraft/src/NetLoginHandler.java
--- minecraft_server/net/minecraft/src/NetLoginHandler.java	2021-10-16 15:47:05.396306200 -0400
+++ minecraft_server_patched/net/minecraft/src/NetLoginHandler.java	2021-10-16 15:43:44.226320600 -0400
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.io.IOException;
 import java.net.Socket;
 import java.util.Random;
 import java.util.logging.Logger;
@@ -30,7 +31,11 @@
         if (this.loginTimer++ == 100) {
             this.kickUser("Took too long to log in");
         } else {
-            this.netManager.processReadPackets();
+            try {
+                this.netManager.processReadPackets();
+            } catch (IOException ex) {
+                ex.printStackTrace();
+            }
         }
 
     }
diff -r -U 3 minecraft_server/net/minecraft/src/NetServerHandler.java minecraft_server_patched/net/minecraft/src/NetServerHandler.java
--- minecraft_server/net/minecraft/src/NetServerHandler.java	2021-10-16 15:47:05.404285600 -0400
+++ minecraft_server_patched/net/minecraft/src/NetServerHandler.java	2021-10-16 15:45:49.363484500 -0400
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.io.IOException;
 import java.util.logging.Logger;
 import net.minecraft.server.MinecraftServer;
 
@@ -27,7 +28,11 @@
     }
 
     public void handlePackets() {
-        this.netManager.processReadPackets();
+        try {
+            this.netManager.processReadPackets();
+        } catch (IOException ex) {
+            ex.printStackTrace();
+        }
         if (this.playerInAirTime++ % 20 == 0) {
             this.netManager.addToSendQueue(new Packet0KeepAlive());
         }
@@ -85,7 +90,7 @@
             double d5 = d2 - this.playerEntity.posY;
             double d6 = d3 - this.playerEntity.posZ;
             float f3 = 0.0625F;
-            int l = this.mcServer.worldMngr.getCollidingBoundingBoxes(this.playerEntity, this.playerEntity.boundingBox.copy().removeCoord((double)f3, (double)f3, (double)f3)).size() == 0;
+            boolean l = this.mcServer.worldMngr.getCollidingBoundingBoxes(this.playerEntity, this.playerEntity.boundingBox.copy().removeCoord((double)f3, (double)f3, (double)f3)).size() == 0;
             this.playerEntity.moveEntity(d4, d5, d6);
             d4 = d1 - this.playerEntity.posX;
             d5 = d2 - this.playerEntity.posY;
@@ -95,14 +100,14 @@
 
             d6 = d3 - this.playerEntity.posZ;
             double d7 = d4 * d4 + d5 * d5 + d6 * d6;
-            int i1 = false;
+            boolean i1 = false;
             if (d7 > 0.0625D) {
                 i1 = true;
                 logger.warning(this.playerEntity.username + " moved wrongly!");
             }
 
             this.playerEntity.setPositionAndRotation(d1, d2, d3, f1, f2);
-            int i2 = this.mcServer.worldMngr.getCollidingBoundingBoxes(this.playerEntity, this.playerEntity.boundingBox.copy().removeCoord((double)f3, (double)f3, (double)f3)).size() == 0;
+            boolean i2 = this.mcServer.worldMngr.getCollidingBoundingBoxes(this.playerEntity, this.playerEntity.boundingBox.copy().removeCoord((double)f3, (double)f3, (double)f3)).size() == 0;
             if (l && (i1 || !i2)) {
                 this.teleportTo(this.lastPosX, this.lastPosY, this.lastPosZ, f1, f2);
                 return;
@@ -126,7 +131,7 @@
     public void handleBlockDig(Packet14BlockDig paramhd) {
         this.playerEntity.inventory.mainInventory[this.playerEntity.inventory.currentItem] = this.heldItem;
         boolean bool = this.mcServer.worldMngr.disableSpawnProtection = this.mcServer.configManager.isOp(this.playerEntity.username);
-        int l = false;
+        boolean l = false;
         if (paramhd.status == 0) {
             l = true;
         }
diff -r -U 3 minecraft_server/net/minecraft/src/NetworkAcceptThread.java minecraft_server_patched/net/minecraft/src/NetworkAcceptThread.java
--- minecraft_server/net/minecraft/src/NetworkAcceptThread.java	2021-10-16 15:47:05.422237800 -0400
+++ minecraft_server_patched/net/minecraft/src/NetworkAcceptThread.java	2021-10-16 15:44:51.664266600 -0400
@@ -24,7 +24,7 @@
                     NetLoginHandler var2 = new NetLoginHandler(this.minecraftServer, var1, "Connection #" + NetworkListenThread.incrementConnections(this.networkListenThread));
                     NetworkListenThread.addPendingConnection(this.networkListenThread, var2);
                 }
-            } catch (IOException var3) {
+            } catch (Exception var3) {
                 var3.printStackTrace();
             }
         }
diff -r -U 3 minecraft_server/net/minecraft/src/World.java minecraft_server_patched/net/minecraft/src/World.java
--- minecraft_server/net/minecraft/src/World.java	2021-10-16 15:47:05.832159100 -0400
+++ minecraft_server_patched/net/minecraft/src/World.java	2021-10-16 15:45:02.624099400 -0400
@@ -1497,7 +1497,11 @@
         }
 
         for(int var5 = 0; var5 < this.worldAccesses.size(); ++var5) {
-            ((IWorldAccess)this.worldAccesses.get(var5)).doNothingWithTileEntity(var1, var2, var3, var4);
+            try {
+                ((IWorldAccess)this.worldAccesses.get(var5)).doNothingWithTileEntity(var1, var2, var3, var4);
+            } catch (IOException ex) {
+                ex.printStackTrace();
+            }
         }
 
     }
